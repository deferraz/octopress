#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
APP_PATH="/var/www/octopress/"

case "$1" in
    configure)

      BIN="/usr/bin"

      RUBY=$(which ruby) || RUBY="NULL"
      if [ "${RUBY}" = "NULL" ] && [ -f "${BIN}/ruby1.9.1" ]; then
         ln -s ${BIN}/ruby1.9.1 ${BIN}/ruby
      fi

      GEM=$(which gem) || GEM="NULL"
      if [ "${GEM}" = "NULL" ] && [ -f "${BIN}/gem1.9.1" ]; then
         ln -s ${BIN}/gem1.9.1 ${BIN}/gem
      fi

      RAKE=$(which rake) || RAKE="NULL"
      if [ "${RAKE}" = "NULL" ] && [ -f "${BIN}/rake1.9.1" ]; then
         ln -s ${BIN}/rake1.9.1 ${BIN}/rake
      fi

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
